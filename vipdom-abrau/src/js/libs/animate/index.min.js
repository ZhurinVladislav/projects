gsap.registerPlugin(ScrollTrigger, SmoothScroll);

if (ScrollTrigger.isTouch !== 1) {
  SmoothScroll({
    animationTime: 800,
    stepSize: 50,
    accelerationDelta: 30,
    accelerationMax: 2,
    keyboardSupport: true,
    arrowScroll: 50,
    pulseAlgorithm: true,
    pulseScale: 4,
    pulseNormalize: 1,
    touchpadSupport: true,
  });

  gsap.fromTo(
    '.location-img-list__item_one',
    { y: 0 },
    {
      y: -70,
      scrollTrigger: {
        trigger: '.location-img-list__item_one',
        start: '-200',
        end: '200',
        scrub: true,
      },
    }
  );
  gsap.fromTo(
    '.location-img-list__item_two',
    { y: 0 },
    {
      y: 70,
      scrollTrigger: {
        trigger: '.location-img-list__item_two',
        start: '-200',
        end: '200',
        scrub: true,
      },
    }
  );
  gsap.fromTo(
    '.location-img-list__item_three',
    { y: 0 },
    {
      y: 100,
      scrollTrigger: {
        trigger: '.location-img-list__item_three',
        start: '-200',
        end: '200',
        scrub: true,
      },
    }
  );
  gsap.fromTo(
    '.location-img-list__item_four',
    { y: 0 },
    {
      y: 70,
      scrollTrigger: {
        trigger: '.location-img-list__item_four',
        start: '-200',
        end: '200',
        scrub: true,
      },
    }
  );
  gsap.fromTo(
    '.location-img-list__item_five',
    { y: 0 },
    {
      y: -70,
      scrollTrigger: {
        trigger: '.location-img-list__item_five',
        start: '-200',
        end: '200',
        scrub: true,
      },
    }
  );
}

const onEntry = entry => {
  entry.forEach(change => {
    change.isIntersecting ? change.target.classList.add('element-show') : change.target.classList.remove('element-show');
  });
};

const options = {
  threshold: [0.5],
};

const observer = new IntersectionObserver(onEntry, options);
const elements = Array.from(document.querySelectorAll('.element-animation'));

for (let elm of elements) {
  observer.observe(elm);
}
